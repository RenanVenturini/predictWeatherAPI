// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PredictWeatherAPI.Data;

#nullable disable

namespace PredictWeatherAPI.Migrations
{
    [DbContext(typeof(PredictWeatherContext))]
    [Migration("20240408212104_Inicial")]
    partial class Inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PredictWeatherAPI.Data.Table.TbDispositivo", b =>
                {
                    b.Property<int>("DispositivoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DispositivoId"));

                    b.Property<string>("ComandosDisponiveis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fabricante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DispositivoId");

                    b.ToTable("TbDispositivo", (string)null);
                });

            modelBuilder.Entity("PredictWeatherAPI.Data.Table.TbMedicaoChuva", b =>
                {
                    b.Property<int>("MedicaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MedicaoId"));

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_hora");

                    b.Property<int>("DispositivoId")
                        .HasColumnType("int");

                    b.Property<decimal>("VolumetriaChuva")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("volumetria_chuva");

                    b.HasKey("MedicaoId");

                    b.HasIndex("DispositivoId");

                    b.ToTable("TbMedicaoChuva", (string)null);
                });

            modelBuilder.Entity("PredictWeatherAPI.Data.Table.TbUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TbUsuario", (string)null);
                });

            modelBuilder.Entity("PredictWeatherAPI.Data.Table.TbMedicaoChuva", b =>
                {
                    b.HasOne("PredictWeatherAPI.Data.Table.TbDispositivo", "Dispositivo")
                        .WithMany("MedidorChuva")
                        .HasForeignKey("DispositivoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dispositivo");
                });

            modelBuilder.Entity("PredictWeatherAPI.Data.Table.TbDispositivo", b =>
                {
                    b.Navigation("MedidorChuva");
                });
#pragma warning restore 612, 618
        }
    }
}
